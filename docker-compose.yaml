version: "3.8"

networks:
  nua-network:
    driver: bridge
    name: nua-network

services:

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: dev.Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
    networks:
      - nua-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  neo4j:
    image: neo4j:5.13-community
    container_name: neo4j
    ports:
      - "7474:7474" 
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=gds.*
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - nua-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "password", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: dev.Dockerfile
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=django-insecure-docker-development-key
      - DEBUG=True
      - NEO4J_BOLT_URL=bolt://neo4j:password@neo4j:7687
      - NEO4J_TEST_URL=bolt://neo4j:password@neo4j:7687
    volumes:
      - ./backend:/app
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - nua-network
    restart: unless-stopped
    command: >
      sh -c "python manage.py migrate &&
             python manage.py install_labels &&
             python manage.py create_superuser &&
             python manage.py create_sample_data &&
             python manage.py runserver 0.0.0.0:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/auth/login/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
